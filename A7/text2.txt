start BOF procedures EOF
BOF BOF
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID proc0
LPAREN (
params
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor NUM
NUM 0
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID proc1
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT STAR
INT int
STAR *
ID a
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor NUM
NUM 1
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID proc2
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor NUM
NUM 2
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID proc3
LPAREN (
params paramlist
paramlist dcl COMMA paramlist
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
paramlist dcl COMMA paramlist
dcl type ID
type INT
INT int
ID b
COMMA ,
paramlist dcl
dcl type ID
type INT
INT int
ID c
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor NUM
NUM 3
SEMI ;
RBRACE }
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID isInteger
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT
INT int
ID id
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor NUM
NUM 1
SEMI ;
RBRACE }
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls dcls dcl BECOMES NUM SEMI
dcls
dcl type ID
type INT
INT int
ID c
BECOMES =
NUM 0
SEMI ;
statements
RETURN return
expr term
term factor
factor ID LPAREN arglist RPAREN
ID isInteger
LPAREN (
arglist expr
expr expr PLUS term
expr expr PLUS term
expr expr PLUS term
expr term
term factor
factor ID LPAREN RPAREN
ID proc0
LPAREN (
RPAREN )
PLUS +
term factor
factor ID LPAREN arglist RPAREN
ID proc1
LPAREN (
arglist expr
expr term
term factor
factor ID
ID a
RPAREN )
PLUS +
term factor
factor ID LPAREN arglist RPAREN
ID proc2
LPAREN (
arglist expr COMMA arglist
expr term
term factor
factor ID
ID a
COMMA ,
arglist expr
expr term
term factor
factor ID
ID b
RPAREN )
PLUS +
term factor
factor ID LPAREN arglist RPAREN
ID proc3
LPAREN (
arglist expr COMMA arglist
expr term
term factor
factor ID
ID a
COMMA ,
arglist expr COMMA arglist
expr term
term factor
factor ID
ID b
COMMA ,
arglist expr
expr term
term factor
factor ID
ID c
RPAREN )
RPAREN )
SEMI ;
RBRACE }
EOF EOF
